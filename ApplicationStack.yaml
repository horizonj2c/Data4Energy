AWSTemplateFormatVersion: 2010-09-09
# This CloudFormation is used for Data4Business project. The AWS environnement is created in eu-west-1
Mappings:
 #  This is the Amazon Linux 2 AMI.  Adjust these values as needed, they can change a few times per year:
  AmazonLinuxAMI:
    eu-west-1:
      AMI: ami-07ea61f0216dae1e6    # Ireland 
Parameters:
#  QGISInstanceKeyPair:
#    Type: "AWS::EC2::KeyPair::KeyName"
#    Default: QGISInstanceKeyPair
  NumberOfAZs:
    Type: Number
    AllowedValues:
    - 1
    - 2
    - 3
    Default: 1
    Description:  How many Availability Zones do you wish to utilize?
Resources:
  QGISInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [ AmazonLinuxAMI, !Ref "AWS::Region", AMI]  # lookup from AMI map
      InstanceType: t2.small    
      KeyName: "QGISInstanceKeyPair"
      NetworkInterfaces:
      - DeviceIndex: '0'
        SubnetId: !ImportValue Data4EnergyAPP1      
        AssociatePublicIpAddress: false                
        GroupSet: [ !ImportValue PrivateSecurityGroup1]             # Plug in the security group
      SourceDestCheck: true 
      Tags:
      - 
        Key: Name
        Value: QGISInstance
#Target Group 
  TargetGroupApps1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: QGISInstance
    Properties: 
      Name: TargetGroupApp1
      VpcId: !ImportValue VPCApps  
      Port: 80
      Protocol: TCP
      TargetType: instance 
      Targets: 
        - Id: !Ref QGISInstance
   #NLB in VPCAPPS
  NLBApps1:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      IpAddressType: ipv4
      Name: NLBVPCApps
      Scheme: internal
      Subnets: 
        - "subnet-01084c17f7aee2a60"
      Type: network
 #Listeners for NLBVPCApps
  NLBListernerApps1:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
       - Type: forward
         TargetGroupArn: !Ref TargetGroupApps1
      LoadBalancerArn: !Ref NLBApps1
      Port: 80
      Protocol: TCP
  EndPointService:
    Type: AWS::EC2::VPCEndpointService
    Properties: 
      AcceptanceRequired: false
      NetworkLoadBalancerArns: 
        - !Ref NLBApps1
#  EndpointNLB:
#    Type: 'AWS::EC2::VPCEndpoint'
#    DependsOn: EndPointService
#    Properties:
#      ServiceName: "com.amazonaws.vpce.eu-west-1.vpce-svc-030648eef65d80743"
#      VpcEndpointType : Interface
#      VpcId: !ImportValue VPCDMZ
#      SubnetIds: 
#        - "subnet-06799e274a96fd70a"
#  TargetGroupApps2:
#    Type: AWS::ElasticLoadBalancingV2::TargetGroup
#    Properties: 
#      Name: TargetGroupApp2
#      VpcId: !ImportValue VPCDMZ
#     Port: 80
#      Protocol: HTTP
#      TargetType: ip
#      Targets:
#        - Id: "10.0.1.202"
    #ALB in VPCAPPS
  ALBApps1:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      IpAddressType: ipv4
      Name: ALBVPCApps
      Scheme: internet-facing
      Subnets: 
        - "subnet-06799e274a96fd70a"
        - "subnet-0d41cd8e4e9291ee6"
      Type: application 
 # ALBListernerApps1:
 #   Type: AWS::ElasticLoadBalancingV2::Listener
 #   Properties:
 #     DefaultActions:
 #      - Type: forward
 #        TargetGroupArn: !Ref TargetGroupApps2
 #     LoadBalancerArn: !Ref ALBApps1
 #     Port: 80
 #     Protocol: HTTP   
#Output section expected      
Outputs:
  QGISInstance:
    Description: Instance for QGIS
    Value: !Ref QGISInstance
    Export:
      Name: QGISInstance
